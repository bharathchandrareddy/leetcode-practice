66. Plus One
Solved
Easy
Topics
Companies
You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.

Increment the large integer by one and return the resulting array of digits.

 

Example 1:

Input: digits = [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Incrementing by one gives 123 + 1 = 124.
Thus, the result should be [1,2,4].
Example 2:

Input: digits = [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.
Incrementing by one gives 4321 + 1 = 4322.
Thus, the result should be [4,3,2,2].
Example 3:

Input: digits = [9]
Output: [1,0]
Explanation: The array represents the integer 9.
Incrementing by one gives 9 + 1 = 10.
Thus, the result should be [1,0].
 

Constraints:

1 <= digits.length <= 100
0 <= digits[i] <= 9
digits does not contain any leading 0's.

Solution 1:
the time complexity will always be O(n) because of the use of predeifned functions. So, this is not the best solution
class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        new=''.join(map(str,digits))
        new = int(new)+1
        li = [int(x) for x in str(new)]
        return li

Solution 2:
the best time comlexity is O(1), worst time complexity is O(n)
class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        i = len(digits)-1
        while i>=0 :
            if digits[i]==9:
                digits[i]=0
                i=i-1
            else:
                digits[i]+=1
                return digits
        return [1]+digits

        
